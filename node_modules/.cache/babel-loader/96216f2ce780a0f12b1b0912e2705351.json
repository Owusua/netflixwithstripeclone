{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/owusua/Videos/mynetflix-clone-papa/src/screens/PlansScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport db from \"../firebase\";\nimport \"./PlansScreen.css\";\n\nfunction PlansScreen() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    db.collection(\"products\").where(\"active\", \"==\", true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection(\"prices\").get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  console.log(products);\n\n  const loadCheckout = async priceId => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\",\n    children: Object.entries(products).map(([productId, productData]) => {\n      //add some logic to check if users subscription is active\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plansScreen__plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planScreen__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onCLick: () => loadCheckout(productData.prices.priceId),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlansScreen, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = PlansScreen;\nexport default PlansScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"sources":["/home/owusua/Videos/mynetflix-clone-papa/src/screens/PlansScreen.js"],"names":["React","useState","useEffect","db","PlansScreen","products","setProducts","collection","where","get","then","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","docs","price","prices","priceId","priceData","console","log","loadCheckout","Object","entries","map","productId","productData","name","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAO,mBAAP;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,EAAE,CAACI,UAAH,CAAc,UAAd,EACGC,KADH,CACS,QADT,EACmB,IADnB,EACyB,IADzB,EAEGC,GAFH,GAGGC,IAHH,CAGSC,aAAD,IAAmB;AACvB,YAAMN,QAAQ,GAAG,EAAjB;AACAM,MAAAA,aAAa,CAACC,OAAd,CAAsB,MAAOC,UAAP,IAAsB;AAC1CR,QAAAA,QAAQ,CAACQ,UAAU,CAACC,EAAZ,CAAR,GAA0BD,UAAU,CAACE,IAAX,EAA1B;AACA,cAAMC,SAAS,GAAG,MAAMH,UAAU,CAACI,GAAX,CAAeV,UAAf,CAA0B,QAA1B,EAAoCE,GAApC,EAAxB;AACAO,QAAAA,SAAS,CAACE,IAAV,CAAeN,OAAf,CAAwBO,KAAD,IAAW;AAChCd,UAAAA,QAAQ,CAACQ,UAAU,CAACC,EAAZ,CAAR,CAAwBM,MAAxB,GAAiC;AAC/BC,YAAAA,OAAO,EAAEF,KAAK,CAACL,EADgB;AAE/BQ,YAAAA,SAAS,EAAEH,KAAK,CAACJ,IAAN;AAFoB,WAAjC;AAID,SALD;AAMD,OATD;AAUAT,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAhBH;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAmBAkB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;;AACA,QAAMoB,YAAY,GAAG,MAAOJ,OAAP,IAAmB,CAAE,CAA1C;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGK,MAAM,CAACC,OAAP,CAAetB,QAAf,EAAyBuB,GAAzB,CAA6B,CAAC,CAACC,SAAD,EAAYC,WAAZ,CAAD,KAA8B;AAC1D;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAA,sBAAKA,WAAW,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,WAAW,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,OAAO,EAAE,MAAMP,YAAY,CAACK,WAAW,CAACV,MAAZ,CAAmBC,OAApB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAbA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA1CQjB,W;;KAAAA,W;AA4CT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport db from \"../firebase\";\nimport \"./PlansScreen.css\";\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"products\")\n      .where(\"active\", \"==\", true)\n      .get()\n      .then((querySnapshot) => {\n        const products = {};\n        querySnapshot.forEach(async (productDoc) => {\n          products[productDoc.id] = productDoc.data();\n          const priceSnap = await productDoc.ref.collection(\"prices\").get();\n          priceSnap.docs.forEach((price) => {\n            products[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            };\n          });\n        });\n        setProducts(products);\n      });\n  }, []);\n  console.log(products);\n  const loadCheckout = async (priceId) => {};\n  return (\n    <div className=\"plansScreen\">\n      {Object.entries(products).map(([productId, productData]) => {\n        //add some logic to check if users subscription is active\n        return (\n          <div className=\"plansScreen__plan\">\n            <div className=\"planScreen__info\">\n              <h5>{productData.name}</h5>\n              <h5>{productData.description}</h5>\n            </div>\n            <button onCLick={() => loadCheckout(productData.prices.priceId)}>\n              Subscribe\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PlansScreen;\n"]},"metadata":{},"sourceType":"module"}