{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/owusua/Videos/mynetflix-clone-papa/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow = false\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const base_url = \"https://image.tmbd.org/t/p/original\";\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => isLargeRow && movie.poster_path || !isLargeRow && movie.backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/home/owusua/Videos/mynetflix-clone-papa/src/Row.js"],"names":["React","axios","Row","title","fetchUrl","isLargeRow","movies","setMovies","useState","base_url","useEffect","fetchData","request","get","data","results","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,UAAU,GAAG;AAAhC,CAAb,EAAsD;AAAA;;AACpD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMC,QAAQ,GAAG,qCAAjB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeC,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUT,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACK,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GAPQ,EAON,CAACP,QAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGG,MAAM,CAACU,GAAP,CACEC,KAAD,IACGZ,UAAU,IAAIY,KAAK,CAACC,WAArB,IACC,CAACb,UAAD,IAAeY,KAAK,CAACE,aAArB,iBACC;AACE,QAAA,SAAS,EAAG,eAAcd,UAAU,IAAI,kBAAmB,EAD7D;AAGE,QAAA,GAAG,EAAG,GAAEI,QAAS,GACfJ,UAAU,GAAGY,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aACxC,EALH;AAME,QAAA,GAAG,EAAEF,KAAK,CAACG;AANb,SAEOH,KAAK,CAACI,EAFb;AAAA;AAAA;AAAA;AAAA,cAJL;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAlCQnB,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n  const [movies, setMovies] = useState([]);\n  const base_url = \"https://image.tmbd.org/t/p/original\";\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map(\n          (movie) =>\n            (isLargeRow && movie.poster_path) ||\n            (!isLargeRow && movie.backdrop_path && (\n              <img\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                key={movie.id}\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n              />\n            ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}