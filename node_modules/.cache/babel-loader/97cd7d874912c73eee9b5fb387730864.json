{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/owusua/Videos/mynetflix-clone-papa/src/screens/PlansScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\"; //import { selectUser } from \"../features/useSlice\";\n\nimport db from \"../firebase\";\nimport \"./PlansScreen.css\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nfunction PlansScreen() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  useEffect(() => {\n    db.collection(\"products\").where(\"active\", \"==\", true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection(\"prices\").get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  console.log(products);\n\n  const loadCheckout = async priceId => {\n    const docRef = await db.collection(\"customers\").doc(user.uid).collection(\"checkout_sessions\").add({\n      price: priceId,\n      success_url: window.location.origin,\n      cancel_url: window.location.origin\n    });\n    docRef.onSnapshot(async snap => {\n      const {\n        error,\n        sessionId\n      } = snap.data();\n\n      if (error) {\n        //Show an error to you customer and inspect your Cloud function logs in the Firebase console\n        alert(`An error occured: ${error.message}`);\n      }\n\n      if (sessionId) {\n        // We have a session, lets redirect to Checkout,\n        //Initialize Stripe\n        const stripe = await loadStripe(\"pk_test_51HQzccJi6cwzy1sivjZse62bFU6ZV4ublhFLH6aMIueBQokwITmhy8NggRSCxyJqXaqwwZ0rbFK4kulwL72Cz8Dl00bbC8fabU\");\n        stripe.redirectToCheckout({\n          sessionId\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\",\n    children: Object.entries(products).map(([productId, productData]) => {\n      //add some logic to check if users subscription is active\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plansScreen__plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planScreen__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onCLick: () => loadCheckout(productData.prices.priceId),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlansScreen, \"nuatpq5LhrWF8CWFG6V8/grvPqY=\", false, function () {\n  return [useSelector];\n});\n\n_c = PlansScreen;\nexport default PlansScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"sources":["/home/owusua/Videos/mynetflix-clone-papa/src/screens/PlansScreen.js"],"names":["React","useState","useEffect","useSelector","db","loadStripe","PlansScreen","products","setProducts","user","selectUser","collection","where","get","then","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","docs","price","prices","priceId","priceData","console","log","loadCheckout","docRef","doc","uid","add","success_url","window","location","origin","cancel_url","onSnapshot","snap","error","sessionId","alert","message","stripe","redirectToCheckout","Object","entries","map","productId","productData","name","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n//import { selectUser } from \"../features/useSlice\";\nimport db from \"../firebase\";\nimport \"./PlansScreen.css\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    db.collection(\"products\")\n      .where(\"active\", \"==\", true)\n      .get()\n      .then((querySnapshot) => {\n        const products = {};\n        querySnapshot.forEach(async (productDoc) => {\n          products[productDoc.id] = productDoc.data();\n          const priceSnap = await productDoc.ref.collection(\"prices\").get();\n          priceSnap.docs.forEach((price) => {\n            products[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            };\n          });\n        });\n        setProducts(products);\n      });\n  }, []);\n  console.log(products);\n  const loadCheckout = async (priceId) => {\n    const docRef = await db\n      .collection(\"customers\")\n      .doc(user.uid)\n      .collection(\"checkout_sessions\")\n      .add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url: window.location.origin,\n      });\n    docRef.onSnapshot(async (snap) => {\n      const { error, sessionId } = snap.data();\n      if (error) {\n        //Show an error to you customer and inspect your Cloud function logs in the Firebase console\n        alert(`An error occured: ${error.message}`);\n      }\n      if (sessionId) {\n        // We have a session, lets redirect to Checkout,\n        //Initialize Stripe\n        const stripe = await loadStripe(\n          \"pk_test_51HQzccJi6cwzy1sivjZse62bFU6ZV4ublhFLH6aMIueBQokwITmhy8NggRSCxyJqXaqwwZ0rbFK4kulwL72Cz8Dl00bbC8fabU\"\n        );\n        stripe.redirectToCheckout({ sessionId });\n      }\n    });\n  };\n  return (\n    <div className=\"plansScreen\">\n      {Object.entries(products).map(([productId, productData]) => {\n        //add some logic to check if users subscription is active\n        return (\n          <div className=\"plansScreen__plan\">\n            <div className=\"planScreen__info\">\n              <h5>{productData.name}</h5>\n              <h5>{productData.description}</h5>\n            </div>\n            <button onCLick={() => loadCheckout(productData.prices.priceId)}>\n              Subscribe\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PlansScreen;\n"]},"metadata":{},"sourceType":"module"}